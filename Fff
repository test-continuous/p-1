#!/bin/bash

# Define API credentials and base URL
API_URL="https://serverstash.server.com/rest/api1.0/projects/ABC/repos"
AUTH_TOKEN="BE2234434343CDD"
LIMIT=600  # Number of repositories per request
START=0    # Pagination start index
COUNT=1    # Counter for numbering repositories
declare -a REPOS  # Array to store repository names

echo "Fetching all sub-repositories..."

# Fetch all repositories
while true; do
    response=$(curl -s -H "Authorization: Bearer $AUTH_TOKEN" \
                      -H "Content-Type: application/json" \
                      "$API_URL?limit=$LIMIT&start=$START")

    # Extract repository names
    for repo_name in $(echo "$response" | jq -r '.values[].name'); do
        echo "$COUNT. $repo_name"
        REPOS+=("$repo_name")  # Store repo in array
        ((COUNT++))
    done

    # Check if there are more pages
    is_last_page=$(echo "$response" | jq -r '.isLastPage')
    if [ "$is_last_page" == "true" ]; then
        break
    fi

    START=$(echo "$response" | jq -r '.nextPageStart')
done

echo "Total repositories listed: $((COUNT - 1))"

# Ask user for a project name
read -p "Enter the project name you want to search for: " project_name

# Check if project exists in the fetched list
if [[ " ${REPOS[@]} " =~ " $project_name " ]]; then
    echo "Yes, found it!"

    # Ask for pattern input
    read -p "Enter the directory name pattern to search for: " pattern

    echo "Navigating to '$project_name/browse/k8s/envs/dv/usc1/'..."

    # Fetch the list of app-id directories
    response=$(curl -s -H "Authorization: Bearer $AUTH_TOKEN" \
                      -H "Content-Type: application/json" \
                      "$API_URL/$project_name/browse/k8s/envs/dv/usc1/")

    # Store app-id directories in an array
    app_ids=($(echo "$response" | jq -r '.children.values[] | select(.directory == true) | .path.toString'))

    # Iterate through each app-id and check for the pattern in 'promotable' folder
    for app_id in "${app_ids[@]}"; do
        promotable_path="$app_id/promotable"
        
        # Fetch directory contents
        response=$(curl -s -H "Authorization: Bearer $AUTH_TOKEN" \
                          -H "Content-Type: application/json" \
                          "$API_URL/$project_name/browse/k8s/envs/dv/usc1/$promotable_path")
        
        # Check if the pattern exists in the path
        if echo "$promotable_path" | grep -q "$pattern"; then
            echo "Match found: $project_name/browse/k8s/envs/dv/usc1/$promotable_path"
        fi
    done
else
    echo "No such project found."
fi
