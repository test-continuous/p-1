#!/bin/bash

# Define API credentials and base URL
API_URL="https://serverstash.server.com/rest/api1.0/projects/ABC/repos"
AUTH_TOKEN="BE2234434343CDD"
LIMIT=100  # Number of repositories per request
START=0    # Pagination start index
COUNT=1    # Counter for numbering repositories
declare -a REPOS  # Array to store repository names

echo "Fetching all sub-repositories..."

# Fetch all repositories
while true; do
    response=$(curl -s -H "Authorization: Bearer $AUTH_TOKEN" \
                      -H "Content-Type: application/json" \
                      "$API_URL?limit=$LIMIT&start=$START")

    # Extract repository names  
    for repo_name in $(echo "$response" | jq -r '.values[].name'); do  
        echo "$COUNT. $repo_name"  
        REPOS+=("$repo_name")  # Store repo in array  
        ((COUNT++))  
    done  

    # Check if there are more pages  
    is_last_page=$(echo "$response" | jq -r '.isLastPage')  
    if [ "$is_last_page" == "true" ]; then  
        break  
    fi  

    START=$(echo "$response" | jq -r '.nextPageStart')
done

echo "Total repositories listed: $((COUNT - 1))"

# Ask user for a project name
read -p "Enter the project name you want to search for: " project_name

# Check if project exists in the fetched list
if [[ " ${REPOS[@]} " =~ " $project_name " ]]; then
    echo "Yes, found it!"

    # Ask user if they want to list files and directories  
    read -p "Do you want to list all files and directories recursively in '$project_name'? (yes/no): " list_files_choice  

    if [[ "$list_files_choice" == "yes" ]]; then  
        echo "Recursively listing files and directories in '$project_name'..."  

        # Function to fetch and list all files and directories recursively  
        list_files_recursive() {  
            local repo="$1"  
            local path="$2"  # Path to scan (starting from root)
            local prefix="$3"  # Indentation prefix

            # API call to fetch files and folders at the given path  
            response=$(curl -s -H "Authorization: Bearer $AUTH_TOKEN" \
                              -H "Content-Type: application/json" \
                              "https://serverstash.server.com/rest/api1.0/projects/ABC/repos/$repo/browse/$path")

            # Extract and iterate over each item in the directory  
            items=($(echo "$response" | jq -r '.children.values[].path.toString'))
            count=${#items[@]}
            index=0

            for item in "${items[@]}"; do  
                ((index++))
                # Determine tree structure symbols
                if [[ $index -eq $count ]]; then
                    echo "${prefix}└── $item"
                    new_prefix="${prefix}    " # Spaces for last item
                else
                    echo "${prefix}├── $item"
                    new_prefix="${prefix}│   " # Vertical line for continued items
                fi

                # Check if it's a directory
                is_dir=$(echo "$response" | jq -r ".children.values[] | select(.path.toString==\"$item\") | .directory")
                if [[ "$is_dir" == "true" ]]; then  
                    list_files_recursive "$repo" "$item" "$new_prefix"
                fi  
            done  
        }  

        # Start recursive listing from the root of the repository  
        list_files_recursive "$project_name" "" ""

    else  
        echo "Job done."  
    fi
else
    echo "No such project found."
fi
